---
- hosts: all
  become: true
  tasks:

    - name: Start and enable necessary services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items: "{{ necessary_services }}"

    - name: Stop and disable unnecessary services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items: "{{ unnecessary_services }}"
      ignore_errors: true

    - name: Only run apt update if > 3600 seconds ago
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Remove unnecessary software
      package:
        name: "{{ unnecessary_software }}"
        state: absent
        purge: true
      ignore_errors: true

    - name: Install necessary software
      package:
        name: "{{ necessary_software }}"
        state: present
        install_recommends: false

    - name: Apt autoremove and autoclean
      package:
        autoremove: true
        autoclean: true
      ignore_errors: true

    - name: add home network nameserver
      lineinfile:
        path: /etc/resolvconf/resolv.conf.d/head
        line: "nameserver 192.168.1.1"
        state: present
        create: true

    - name: Restart resolvconf
      systemd:
        state: restarted
        name: resolvconf
        enabled: true
        daemon_reload: true

    - name: Restart systemd-resolved
      systemd:
        state: restarted
        name: systemd-resolved
        enabled: true
        daemon_reload: true

    - name: set bashrc
      template:
        dest: "/home/{{ admin_user }}/.bashrc"
        src: templates/bashrc.j2
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: 0644

    - name: Set a message of the day
      template:
        dest: /etc/motd
        src: templates/motd.j2
        owner: root
        group: root
        mode: 0644

    - name: Set a login banner
      template:
        dest: "{{ item }}"
        src: templates/issue.j2
        owner: root
        group: root
        mode: 0644
      with_items:
        - /etc/issue
        - /etc/issue.net

    - name: Remove other motds
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ unnecessary_motd }}"

    - name: Add SSH public key for user
      authorized_key:
        user: "{{ admin_user }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present

    - name: Add sudoer rule for local user
      template:
        dest: /etc/sudoers.d/{{ admin_user }}
        src: templates/admin_user.j2
        owner: root
        group: root
        mode: 0440
        validate: /usr/sbin/visudo -csf %s

    - name: Add hardened SSH config
      template:
        dest: /etc/ssh/sshd_config
        src: ./templates/sshd_config.j2
        owner: root
        group: root
        mode: 0600
      notify: Reload SSH

    - name: Set authorized key defining key options
      ansible.posix.authorized_key:
        user: "{{ admin_user }}"
        state: present
        key: "{{ item }}"
      loop: "{{ authorized_keys}}"

    - name: Add lines to fstab
      ansible.posix.mount:
        src: "{{ item.src }}"
        path: "{{ item.path }}"
        opts: "{{ item.opts }}"
        state: "{{ item.state }}"
        fstype: "{{ item.fstype }}"
      with_items: "{{ fstab_mounts }}"

    - name: mount all
      command: mount -a
      
    - name: Bootstrap docker directory
      file:
        path: /etc/docker/certs.d/discovery.local:31500
        state: directory

    - name: Set local docker ca.crt
      copy:
        src: /volume1/brandon/docker-registry/certs/discovery.crt
        dest: /etc/docker/certs.d/discovery.local:31500/ca.crt
        
  handlers:
    - name: Reload SSH
      service:
        name: sshd
        state: reloaded

- import_playbook: bootstrap/bootstrap-ssh.yml
- import_playbook: bootstrap/bootstrap-sudo.yml
- import_playbook: generic/chrony-client.yml
- import_playbook: generic/hosts.yml